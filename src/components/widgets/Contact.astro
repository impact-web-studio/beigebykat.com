---
import FormContainer from '~/components/ui/Form.astro';
import ConsultationForm from '~/components/ui/ConsultationForm.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';

const contactFormInputs = [
  {
    type: 'text',
    name: 'name',
    label: 'Name',
    placeholder: 'Your name',
    required: true,
  },
  {
    type: 'email',
    name: 'email',
    label: 'Email',
    placeholder: 'Your email address',
    autocomplete: 'email',
    required: true,
  },
];

const contactFormTextarea = {
  name: 'message',
  label: 'Message',
  placeholder: 'Your message',
  rows: 5,
  required: true,
};

const consultationFormSteps = [
  {
    title: 'Basic Info',
    inputs: [
      {
        type: 'text',
        name: 'name',
        label: 'Full Name',
        placeholder: 'Your name',
        required: true,
      },
      {
        type: 'email',
        name: 'email',
        label: 'Email',
        placeholder: 'Your email address',
        autocomplete: 'email',
        required: true,
      },
      {
        type: 'tel',
        name: 'phone',
        label: 'Phone Number',
        placeholder: 'Your phone number',
        autocomplete: 'tel',
        required: true,
      },
    ],
  },
  {
    title: 'Details',
    inputs: [
      {
        type: 'radio',
        name: 'hair_length',
        label: 'What is your hair length?',
        options: [
          { value: 'super_short', label: 'shorter than shoulder level' },
          { value: 'short', label: 'around shoulder level' },
          { value: 'medium', label: 'around armpit level' },
          { value: 'long', label: 'around elbow level' },
          { value: 'super_long', label: 'below elbow level' },
        ],
        required: true,
      },
      {
        type: 'radio',
        name: 'type',
        label: 'What is your hair type?',
        options: [
          { value: 'thin', label: 'Thin' },
          { value: 'medium', label: 'Medium' },
          { value: 'thick', label: 'Thick' },
          { value: 'curly', label: 'Curly' },
          { value: 'wavy', label: 'Wavy' },
          { value: 'dry', label: 'Dry' },
        ],
        required: true,
      },
    ],
    textarea: {
      name: 'hair_history',
      label: 'Have you done anything to your hair in the previous 2 years?',
      placeholder: 'i.e. color, highlights, balayage, keratin treatment, bleached at home, etc.',
      rows: 5,
      required: true,
    },
  },
  {
    title: 'Goal',
    inputs: [
      {
        type: 'radio',
        name: 'goal',
        label: 'What is your goal?',
        options: [
          { value: 'Natural Brunette', label: 'Natural Brunette' },
          { value: 'Brown with blonde', label: 'Brown with Blonde' },
          { value: 'Dark blonde', label: 'Dark Blonde' },
          { value: 'Light', label: 'As Light as We Can Go' },
          { value: 'not_sure', label: 'Not sure yet' },
        ],
        required: true,
      },
      {
        type: 'radio',
        name: 'priority',
        label: 'What is your top priority?',
        options: [
          { value: 'design', label: 'Outstanding design' },
          { value: 'functionality', label: 'Specific functionality' },
          { value: 'seo', label: 'Search engine visibility' },
          { value: 'speed', label: 'Website speed/performance' },
          { value: 'ease', label: 'Ease of maintenance' },
        ],
        required: true,
      },
    ],
    textarea: {
      name: 'additional_info',
      label: 'Anything else we should know?',
      placeholder: 'Any additional information, questions, or specific requirements',
      rows: 4,
    },
  },
];

const disclaimerText = {
  label: 'I agree to the privacy policy and consent to being contacted regarding my project inquiry.',
};

const { title = '', subtitle = '', tagline = '' } = Astro.props;
---

<WidgetWrapper containerClass="max-w-3xl">
  <Headline
    title={title}
    subtitle={subtitle}
    tagline={tagline}
    classes={{ title: 'font-serif uppercase', subtitle: '' }}
  />
  <div class="bg-white dark:bg-slate-900 rounded-lg shadow-md p-6 md:p-8">
    <!-- Form Type Selection -->
    <div class="form-type-tabs flex border-b border-gray-200 dark:border-gray-700 mb-8">
      <button
        id="general-tab"
        class="tab-button py-3 px-6 font-medium text-sm border-b-2 border-primary-600 text-primary-600 dark:text-primary-400 dark:border-primary-400"
        aria-selected="true"
      >
        Contact Form
      </button>
      <button
        id="consultation-tab"
        class="tab-button py-3 px-6 font-medium text-sm border-b-2 border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300"
        aria-selected="false"
      >
        New Client Form
      </button>
    </div>

    <!-- Form Containers -->
    <div
      id="general-form-container"
      class="form-container block"
    >
      <div class="max-w-2xl mx-auto">
        <FormContainer
          inputs={contactFormInputs}
          textarea={contactFormTextarea}
          disclaimer={disclaimerText}
          button="Send Message"
        />
      </div>
    </div>

    <div
      id="consultation-form-container"
      class="form-container hidden"
    >
      <ConsultationForm
        steps={consultationFormSteps}
        disclaimer={disclaimerText}
        button="Submit Form"
      />
    </div>
  </div>
</WidgetWrapper>

<script>
  document.addEventListener('astro:page-load', () => {
    const generalTab = document.getElementById('general-tab');
    const consultationTab = document.getElementById('consultation-tab');
    const generalFormContainer = document.getElementById('general-form-container');
    const consultationFormContainer = document.getElementById('consultation-form-container');

    if (!generalTab || !consultationTab || !generalFormContainer || !consultationFormContainer) return;

    // Switch to general form
    generalTab.addEventListener('click', () => {
      // Update tab states
      generalTab.classList.add(
        'border-primary-600',
        'text-primary-600',
        'dark:text-primary-400',
        'dark:border-primary-400'
      );
      generalTab.classList.remove('border-transparent', 'text-gray-500', 'dark:text-gray-400');
      generalTab.setAttribute('aria-selected', 'true');

      consultationTab.classList.add('border-transparent', 'text-gray-500', 'dark:text-gray-400');
      consultationTab.classList.remove(
        'border-primary-600',
        'text-primary-600',
        'dark:text-primary-400',
        'dark:border-primary-400'
      );
      consultationTab.setAttribute('aria-selected', 'false');

      // Show/hide forms
      generalFormContainer.classList.remove('hidden');
      generalFormContainer.classList.add('block');
      consultationFormContainer.classList.add('hidden');
      consultationFormContainer.classList.remove('block');
    });

    // Switch to consultation form
    consultationTab.addEventListener('click', () => {
      // Update tab states
      consultationTab.classList.add(
        'border-primary-600',
        'text-primary-600',
        'dark:text-primary-400',
        'dark:border-primary-400'
      );
      consultationTab.classList.remove('border-transparent', 'text-gray-500', 'dark:text-gray-400');
      consultationTab.setAttribute('aria-selected', 'true');

      generalTab.classList.add('border-transparent', 'text-gray-500', 'dark:text-gray-400');
      generalTab.classList.remove(
        'border-primary-600',
        'text-primary-600',
        'dark:text-primary-400',
        'dark:border-primary-400'
      );
      generalTab.setAttribute('aria-selected', 'false');

      // Show/hide forms
      consultationFormContainer.classList.remove('hidden');
      consultationFormContainer.classList.add('block');
      generalFormContainer.classList.add('hidden');
      generalFormContainer.classList.remove('block');
    });
  });
</script>
